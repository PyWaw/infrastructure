- hosts: pywaw.org
  remote_user: root
  vars_files:
  - ../vars/main.yml
  - ../vars/{{ settings }}.yml
  - ../vars/secret.yml
  - ../vars/secret_{{ settings }}.yml
  - ../vars/envs.yml
  tasks:
  - name: install server requirements
    apt: name={{ item }} update_cache=yes
    with_items:
      - nginx
      - uwsgi
      - uwsgi-plugin-python3
      - python-virtualenv
      - git
      - libpq-dev
      - python3.4-dev
      - gcc
      - nodejs
      - npm
      - postgresql-9.4
      - python-psycopg2
  - name: add authorized keys for root user
    authorized_key: user=root key="{{ lookup('file', item) }}"
    with_fileglob:
      - ../artefacts/authorized_keys/*
  - name: create app user
    user: name=app shell=/bin/bash
  - name: add authorized keys for app user
    authorized_key: user=app key="{{ lookup('file', item) }}"
    with_fileglob:
      - ../artefacts/authorized_keys/*
  - name: configure uwsgi
    template: src=../templates/uwsgi.j2 dest=/etc/uwsgi/apps-available/{{ project }}_{{ settings }}.yaml
    notify:
    - restart uwsgi
  - name: enable uwsgi configuration
    file: src=/etc/uwsgi/apps-available/{{ project }}_{{ settings }}.yaml path=/etc/uwsgi/apps-enabled/{{ project }}_{{ settings }}.yaml state=link
    notify:
    - restart uwsgi
  - name: create project structure
    file: path={{ app_path }} state=directory
    remote_user: app
  - name: create project virtualenv
    command: virtualenv -p {{ python }} {{ virtualenv_path }} creates={{ virtualenv_path }}
    remote_user: app
  - name: create node bin link
    file: state=link src=/usr/bin/nodejs path=/usr/bin/node
  - name: create database
    action: postgresql_db db={{ db_name }}
    sudo: yes
    sudo_user: postgres
  - name: create database user
    action: postgresql_user db={{ db_name }} user={{ db_user }} password={{ db_password }} priv=ALL
    sudo: yes
    sudo_user: postgres
  - name: setup postgresql hba
    template: src=../templates/pg_hba.j2 dest=/etc/postgresql/9.4/main/pg_hba.conf
    notify:
      - restart postgresql
  handlers:
  - name: restart nginx
    service: name=nginx state=restarted
  - name: restart uwsgi
    service: name=uwsgi state=restarted arguments={{ settings }}
